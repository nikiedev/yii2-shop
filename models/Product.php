<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "product".
 *
 * @property int $id
 * @property string $title
 * @property string $description
 * @property string $photo
 * @property string $price
 * @property int $category_id
 *
 * @property Review[] $reviews
 */
class Product extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'product';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
	        [['title', 'description'], 'string'],
            [['title', 'description'], 'required'],
	        [['price'], 'match', 'pattern' => '/(\d*\.\d{2}\b)/'],
	        [['price'], 'default', 'value' => 0.00],
            [['category_id'], 'integer'],
	        [['category_id'], 'default', 'value' => 1],
            [['title', 'photo'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'description' => 'Description',
            'photo' => 'Photo',
            'price' => 'Price',
            'category_id' => 'Category ID',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getReviews()
    {
        return $this->hasMany(Review::className(), ['product_id' => 'id']);
    }

	/**
	 * @param $filename
	 *
	 * @return bool
	 */
	public function setPhoto($filename)
	{
		$this->photo = $filename;
		return $this->save(false);
	}

	public function getPhoto()
	{
		return ($this->photo) ? '/uploads/' . $this->photo : '/no-photo.png';
	}

	public function deletePhoto()
	{
		$imageUploadModel = new PhotoUpload();
		$imageUploadModel->deleteCurrentPhoto($this->photo);
	}

	public function beforeDelete()
	{
		$this->deletePhoto();
		return parent::beforeDelete(); // TODO: Change the autogenerated stub
	}

	public function getCategory()
	{
		return $this->hasOne(Category::className(), ['id' => 'category_id']);
	}

	public function saveCategory($category_id)
	{
		$category = Category::findOne($category_id);
		if ($category != null)
		{
			$this->link('category', $category);
			return true;
		}
	}
}
